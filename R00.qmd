---
title: "R入門"
format:
  revealjs:
    incremental: true 
    slide-number: true
    html-math-method: katex
  pdf:
    pdf-engine: lualatex
    documentclass: ltjsarticle 
    toc: true
    toc-depth: 3
    number-sections: true
execute: 
  warning: false
  message: false
---

## Why R?

- Pythonと並ぶ人気言語

    - 豊富なIDEの選択肢、盛んなパッケージ開発、無料等々多くの利点

- 分析の再現性への要求が強まる中で、無料言語を利用する利点は大きい

- 企業/大学/公的機関ともに、無料言語を利用した経験への需要拡大?

## おすすめ教材

- [R for Data Science](https://r4ds.had.co.nz/)

- [Advanced R](https://adv-r.hadley.nz/)

    - プログラミング言語としての説明が充実

## コード例

```{r}
#| echo: true
library(tidyverse) # <1>

Data = read_csv("CPS1985.csv") # <2>

lm(wage ~ education, Data) # <3>
```

1. パッケージの読み込み

2. データを読み込み、Dataと名づけて保存

3. OLS

## 基本文法: 動詞

- Rの学習 $=$ 作業依頼書(コード)の書き方を学ぶ

    - R語で書く必要がある

- 最重要文法

    - "summary()" 関数: 記述統計量の計算

## 基本文法: Object

- 計算結果やデータなどは、objectとして一時的に保存される

    - 名前(参照名)を付けないと再利用できない
    
- "Data = " objectをDataと名づける

## よくあるタイポ

- 名前には、**アルファベット** か **数字**　のみ使用

- 大文字と小文字を区別する

- 括弧内のコンマ(,)やdouble quotation ("") に注意

- 極力、空行や空白を入れて読みやすくする

## Class

- Objectには型(Class)が付与される

- とりあえず重要なClassは、

    - numeric/string/factor: 数字/文字/ファクター(ダミー)を要素とするベクトル(数列)
    
    - list: 様々なobjetの参照名のリスト
    
        - data.frame: 特殊なリスト

```{r}
#| echo: true
class(Data) # <1>
```

1. Classの確認

## listの要素の抽出

- "$" でlistの要素を抽出できる

```{r}
#| echo: true
#| output: false
Data$wage # <1>

Fit = lm(wage ~ education, Data) # <2>

Fit$coefficients # <3>
```

1. Wage vectorの抽出

2. OLSの結果をFitとして保存

3. 係数値を抽出
